name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Cache pre-commit
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install dependencies
      run: uv sync --extra dev --extra test

    - name: Run code quality checks
      run: |
        echo "üîç Running all code quality checks..."
        uv run pre-commit run --all-files --show-diff-on-failure

  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: quality
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --extra dev --extra test

    - name: Run tests with coverage
      run: |
        echo "üß™ Running tests for Python ${{ matrix.python-version }}..."
        uv run pytest --cov=eoapi_notifier --cov-report=xml --cov-report=term-missing --tb=short -v

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build & Verify Package
    runs-on: ubuntu-latest
    needs: [quality, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Build package
      run: |
        echo "üì¶ Building Python package..."
        uv build

    - name: Verify package installation
      run: |
        echo "‚úÖ Verifying package can be installed..."
        uv pip install dist/*.whl --system
        python -c "import eoapi_notifier; print('Package installed successfully')"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
