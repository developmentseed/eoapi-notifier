# eoAPI Notifier Configuration Example
#
# Environment Variable Overrides:
# Any field can be overridden using: PLUGINNAME_FIELDNAME
# Examples: PGSTAC_HOST, MQTT_USE_TLS, CLOUDEVENTS_ENDPOINT


# Sources: Define where notifications come from
sources:
  # PostgreSQL/pgSTAC source for database changes
  - type: pgstac
    config:
      host: localhost                    # Override: PGSTAC_HOST
      port: 5432                         # Override: PGSTAC_PORT
      database: postgis                  # Override: PGSTAC_DATABASE
      user: postgres                     # Override: PGSTAC_USER
      password: changeme                 # Override: PGSTAC_PASSWORD

      # Optional: specific table patterns to monitor
      # tables: ["items", "collections"]
      # Optional: connection pool settings
      # min_connections: 1
      # max_connections: 10

      # Operation Correlation Settings
      # Correlation transforms pgSTAC DELETE+INSERT pairs into semantic UPDATE events
      # enable_correlation: true       # PGSTAC_ENABLE_CORRELATION
      # correlation_window: 5.0        # PGSTAC_CORRELATION_WINDOW
      # cleanup_interval: 1.0          # PGSTAC_CLEANUP_INTERVAL

# Outputs: Define where notifications are sent
outputs:
  # MQTT output for publishing events
  - type: mqtt
    config:
      broker_host: localhost          # MQTT_BROKER_HOST
      broker_port: 1883               # MQTT_BROKER_PORT

      # Optional: authentication
      # username: mqtt_user           # MQTT_USERNAME
      # password: mqtt_password       # MQTT_PASSWORD
      # Optional: TLS settings
      # use_tls: true                 # MQTT_USE_TLS

      # Optional: topic configuration
      # topic: "eoapi/"               # MQTT_TOPIC
      # qos: 1                        # MQTT_QOS

  # CloudEvents HTTP output for sending events as CloudEvents
  #
  # Besides the regular overwrite, this plugin also supports K_SINK
  # https://knative.dev/docs/eventing/custom-event-source/sinkbinding/
  - type: cloudevents
    config:
      endpoint: https://example.com/webhook  # CLOUDEVENTS_ENDPOINT or K_SINK

      # Optional: CloudEventattributes
      # source: "/eoapi/stac"               # CLOUDEVENTS_SOURCE or K_SOURCE
      # event_type: "org.eoapi.stac"        # CLOUDEVENTS_EVENT_TYPE or K_TYPE

      # Optional: HTTP settings
      # timeout: 30.0                       # CLOUDEVENTS_TIMEOUT
      # max_retries: 3                      # CLOUDEVENTS_MAX_RETRIES

# Example with multiple sources and outputs
# sources:
#   - type: pgstac
#     config:
#       host: db1.example.com
#       port: 5432
#       database: stac_db
#       username: notifier
#       password: secret123
#
#   - type: pgstac
#     config:
#       host: db2.example.com
#       port: 5432
#       database: another_db
#       username: notifier
#       password: secret456

# outputs:
#   - type: mqtt
#     config:
#       broker_host: mqtt.example.com
#       broker_port: 8883
#       username: publisher
#       password: pub_secret
#       use_tls: true
#
#   # Future: webhook output example
#   # - type: webhook
#   #   config:
#   #     url: https://api.example.com/notifications
#   #     headers:
#   #       Authorization: Bearer token123
#   #       timeout: 30
